version: "3.8"

services:
  watchtower:
    image: containrrr/watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    networks:
      - proxy
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/wesley/.docker/config.json:/config.json:ro

  db:
    image: postgres:15
    networks:
      - proxy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rotarydb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rotarydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: ghcr.io/wesleydev184/rotary:main
    networks:
      - proxy
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api.rule=Host(`api.bovisoft.com`)"
        - "traefik.http.routers.api.entrypoints=websecure"
        - "traefik.http.services.api.loadbalancer.server.port=5001"
        - "traefik.http.routers.api.tls.certresolver=myresolver"
        - "com.centurylinklabs.watchtower.enable=true"
    environment:
      DB_URL: "Host=db;Port=5432;Database=rotarydb;Username=postgres;Password=postgres"
      API_KEY: "your_api_key_here"
    # depends_on com condição não funciona em stack
    depends_on:
      - db

volumes:
  postgres-data:

networks:
  proxy:
    external: true
