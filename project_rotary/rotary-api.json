{
  "openapi": "3.0.4",
  "info": {
    "title": "Rotary API",
    "description": "API for Rotary Club orthosis loan management system.",
    "version": "v1.4"
  },
  "paths": {
    "/applicants": {
      "post": {
        "tags": [
          "Applicants"
        ],
        "summary": "Create a new applicant",
        "description": "Creates a new applicant in the system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateApplicantDto"
              },
              "example": {
                "name": "John Doe",
                "cpf": "12345678901",
                "email": "john.doe@example.com",
                "phoneNumber": "11999999999",
                "address": "123 Main St, City",
                "isBeneficiary": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Applicant created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "John Doe",
                    "cpf": "12345678901",
                    "email": "john.doe@example.com",
                    "phoneNumber": "11999999999",
                    "address": "123 Main St, City",
                    "isBeneficiary": true,
                    "beneficiaryQtd": 1,
                    "createdAt": "2025-07-08T15:59:46.1618321Z",
                    "dependents": null
                  },
                  "message": "Applicant created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Bad Request Error message"
                }
              }
            }
          },
          "409": {
            "description": "Applicant already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Conflict Error message"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Internal Server Error message"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Applicants"
        ],
        "summary": "Get all applicants",
        "description": "Retrieves a list of all applicants in the system.",
        "responses": {
          "200": {
            "description": "Applicants retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "00000000-0000-0000-0000-000000000000",
                      "name": "John Doe",
                      "cpf": "12345678901",
                      "email": "john.doe@example.com",
                      "phoneNumber": "11999999999",
                      "address": "123 Main St, City",
                      "isBeneficiary": true,
                      "beneficiaryQtd": 1,
                      "createdAt": "2025-07-08T15:59:46.1713455Z",
                      "dependents": null
                    }
                  ],
                  "message": "Applicants retrieved successfully"
                }
              }
            }
          }
        }
      }
    },
    "/applicants/{id}": {
      "get": {
        "tags": [
          "Applicants"
        ],
        "summary": "Get an applicant by ID",
        "description": "Retrieves an applicant from the system by their unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Applicant retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "John Doe",
                    "cpf": "12345678901",
                    "email": "john.doe@example.com",
                    "phoneNumber": "11999999999",
                    "address": "123 Main St, City",
                    "isBeneficiary": true,
                    "beneficiaryQtd": 1,
                    "createdAt": "2025-07-08T15:59:46.1766488Z",
                    "dependents": [
                      {
                        "id": "11111111-1111-1111-1111-111111111111",
                        "name": "Jane Doe",
                        "cpf": "10987654321",
                        "email": "ex@example.com",
                        "phoneNumber": "11999999998",
                        "address": "456 Elm St, City",
                        "applicantId": "00000000-0000-0000-0000-000000000000",
                        "createdAt": "2025-07-08T15:59:46.1766512+00:00"
                      }
                    ]
                  },
                  "message": "Applicant retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Applicant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Applicant not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Applicants"
        ],
        "summary": "Update an applicant",
        "description": "Updates an existing applicant's information in the system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateApplicantDto"
              },
              "example": {
                "name": "John Doe Updated",
                "cpf": "12345678901",
                "email": "john.updated@example.com",
                "phoneNumber": "11888888888",
                "address": "456 Another St, City",
                "isBeneficiary": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Applicant updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "John Doe",
                    "cpf": "12345678901",
                    "email": "john.doe@example.com",
                    "phoneNumber": "11999999999",
                    "address": "123 Main St, City",
                    "isBeneficiary": true,
                    "beneficiaryQtd": 1,
                    "createdAt": "2025-07-08T15:59:46.1875842Z",
                    "dependents": [
                      {
                        "id": "11111111-1111-1111-1111-111111111111",
                        "name": "Jane Doe",
                        "cpf": "10987654321",
                        "email": "ex@example.com",
                        "phoneNumber": "11999999998",
                        "address": "456 Elm St, City",
                        "applicantId": "00000000-0000-0000-0000-000000000000",
                        "createdAt": "2025-07-08T15:59:46.1875869+00:00"
                      }
                    ]
                  },
                  "message": "Applicant updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Bad Request Error message"
                }
              }
            }
          },
          "404": {
            "description": "Applicant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Applicant not found"
                }
              }
            }
          },
          "409": {
            "description": "Conflict occurred while updating the applicant.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Conflict Error message"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Internal Server Error message"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Applicants"
        ],
        "summary": "Delete an applicant",
        "description": "Deletes an existing applicant from the system by their unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Applicant deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "Applicant deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Applicant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Applicant not found"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerApplicantsDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Internal Server Error message"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Login",
        "description": "Logs in a user with email and password. Returns an access token if successful.",
        "parameters": [
          {
            "name": "useCookies",
            "in": "query",
            "description": "Set to true to use persistent cookies for authentication. Mutually exclusive with useSessionCookies.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "useSessionCookies",
            "in": "query",
            "description": "Set to true to use session-only cookies for authentication. Mutually exclusive with useCookies.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLoginUserDto"
              },
              "example": {
                "email": "Doe@exemple.com",
                "password": "12345678"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                },
                "example": {
                  "tokenType": "Bearer",
                  "accessToken": "ThisIsAnExampleAccessToken",
                  "expiresIn": 3600,
                  "refreshToken": "ThisIsAnExampleRefreshToken"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials or lockout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {
                  "type": "https://example.com/errors/login-error",
                  "title": "Login Error",
                  "status": 401,
                  "detail": "Invalid email or password."
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Logout",
        "description": "Logs out the currently authenticated user. Invalidates the access token and removes the session.",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "User logged out successfully"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create User",
        "description": "Creates a new user with the provided details. Returns the created user ID if successful.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateUserDto"
              },
              "example": {
                "name": "John Doe",
                "email": "Doe@exemple.com",
                "password": "12345678",
                "phoneNumber": "11999999999",
                "orthopedicBankId": "00000000-0000-0000-0000-000000000000"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "User created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Error message"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get Current User",
        "description": "Retrieves the currently authenticated user details.",
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "John Doe",
                    "email": "Doe@exemple.com",
                    "phoneNumber": "11999999999",
                    "orthopedicBank": {
                      "id": "00000000-0000-0000-0000-000000000000",
                      "name": "Orthopedic Bank Name",
                      "city": "Orthopedic Bank Description",
                      "stocks": null,
                      "createdAt": "2025-07-08T15:59:46.2275248Z"
                    },
                    "createdAt": "2025-07-08T15:59:46.2275255Z"
                  },
                  "message": "User retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "User not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Auth"
        ],
        "summary": "Update User",
        "description": "Updates the details of the currently authenticated user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateUserDto"
              },
              "example": {
                "name": "John Doe",
                "email": "Doe@exemple.com",
                "password": "12345678",
                "phoneNumber": "11999999999"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "User updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Conflict Error message"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get All Users",
        "description": "Retrieves a list of all users in the system.",
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "00000000-0000-0000-0000-000000000000",
                      "name": "John Doe",
                      "email": "Doe@Exemple.com",
                      "phoneNumber": "11999999999",
                      "orthopedicBank": null,
                      "createdAt": "2025-07-08T15:59:46.2415731Z"
                    }
                  ],
                  "message": "Users retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "No users found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserListDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "UserS not found"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get User by ID",
        "description": "Retrieves a user by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "John Doe",
                    "email": "Doe@exemple.com",
                    "phoneNumber": "11999999999",
                    "orthopedicBank": {
                      "id": "00000000-0000-0000-0000-000000000000",
                      "name": "Orthopedic Bank Name",
                      "city": "Orthopedic Bank Description",
                      "stocks": null,
                      "createdAt": "2025-07-08T15:59:46.2460247Z"
                    },
                    "createdAt": "2025-07-08T15:59:46.2460257Z"
                  },
                  "message": "User retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "User not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete User",
        "description": "Deletes a user by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "User deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Error deleting user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Error message"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "User not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/orthopedic-bank/{orthopedicBankId}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get users by orthopedic bank",
        "description": "Retrieves all users for a specific orthopedic bank.",
        "parameters": [
          {
            "name": "orthopedicBankId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "00000000-0000-0000-0000-000000000000",
                      "name": "John Doe",
                      "email": "Doe@Exemple.com",
                      "phoneNumber": "11999999999",
                      "orthopedicBank": null,
                      "createdAt": "2025-07-08T15:59:46.2509726Z"
                    }
                  ],
                  "message": "Users retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Orthopedic bank not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerUserListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "00000000-0000-0000-0000-000000000000",
                      "name": "John Doe",
                      "email": "Doe@Exemple.com",
                      "phoneNumber": "11999999999",
                      "orthopedicBank": null,
                      "createdAt": "2025-07-08T15:59:46.2510312Z"
                    }
                  ],
                  "message": "Users retrieved successfully"
                }
              }
            }
          }
        }
      }
    },
    "/dependents": {
      "post": {
        "tags": [
          "Dependents"
        ],
        "summary": "Create a new dependent",
        "description": "Creates a new dependent in the system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateDependentDto"
              },
              "example": {
                "name": "Jane Doe",
                "cpf": "10987654321",
                "email": "jane.doe@example.com",
                "phoneNumber": "11888888888",
                "address": "456 Secondary St, City",
                "applicantId": "11111111-1111-1111-1111-111111111111"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Dependent created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "9d9562d7-a2a0-43f4-82de-7e5ae6cbf7bf",
                    "name": "Jane Doe",
                    "cpf": "10987654321",
                    "email": "jane.doe@example.com",
                    "phoneNumber": "11888888888",
                    "address": "456 Secondary St, City",
                    "applicantId": "11111111-1111-1111-1111-111111111111",
                    "createdAt": "2025-07-08T15:59:46.2610091Z"
                  },
                  "message": "Dependent created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Bad request error occurred"
                }
              }
            }
          },
          "404": {
            "description": "Applicant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Applicant not found"
                }
              }
            }
          },
          "409": {
            "description": "Dependent already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Conflict error occurred"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Internal server error occurred"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Dependents"
        ],
        "summary": "Get all dependents",
        "description": "Retrieves a list of all dependents in the system.",
        "responses": {
          "200": {
            "description": "Dependents retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "f53f0fcd-3516-4905-85d6-aa013b77cbca",
                      "name": "Jane Doe",
                      "cpf": "10987654321",
                      "email": "jane.doe@example.com",
                      "phoneNumber": "11888888888",
                      "address": "456 Secondary St, City",
                      "applicantId": "11111111-1111-1111-1111-111111111111",
                      "createdAt": "2025-07-08T15:59:46.2643366Z"
                    }
                  ],
                  "message": "Dependents retrieved successfully"
                }
              }
            }
          }
        }
      }
    },
    "/dependents/{id}": {
      "get": {
        "tags": [
          "Dependents"
        ],
        "summary": "Get a dependent by ID",
        "description": "Retrieves a dependent from the system by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dependent retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "90ea06f4-e60a-42c8-8adc-a01d7a2bd572",
                    "name": "Jane Doe",
                    "cpf": "10987654321",
                    "email": "jane.doe@example.com",
                    "phoneNumber": "11888888888",
                    "address": "456 Secondary St, City",
                    "applicantId": "11111111-1111-1111-1111-111111111111",
                    "createdAt": "2025-07-08T15:59:46.2690514Z"
                  },
                  "message": "Dependent retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Dependent not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Dependent not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Dependents"
        ],
        "summary": "Update a dependent",
        "description": "Updates an existing dependent in the system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateDependentDto"
              },
              "example": {
                "name": "Jane Doe Updated",
                "cpf": "10987654321",
                "email": "jane.updated@example.com",
                "phoneNumber": "11777777777",
                "address": "789 Tertiary Ave, City"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Dependent updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "ba4ff82f-aabe-417e-af4d-a0e19cf67a6f",
                    "name": "Jane Doe Updated",
                    "cpf": "10987654321",
                    "email": "jane.updated@example.com",
                    "phoneNumber": "11777777777",
                    "address": "789 Tertiary Ave, City",
                    "applicantId": "11111111-1111-1111-1111-111111111111",
                    "createdAt": "2025-07-08T15:59:46.276964Z"
                  },
                  "message": "Dependent updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Bad request error occurred"
                }
              }
            }
          },
          "404": {
            "description": "Dependent not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Dependent or Applicant not found"
                }
              }
            }
          },
          "409": {
            "description": "Conflict error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Conflict error occurred"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Internal server error occurred"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Dependents"
        ],
        "summary": "Delete a dependent",
        "description": "Deletes a dependent from the system by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dependent deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "Dependent deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Dependent not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Dependent not found"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerDependentDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Internal server error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/items": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Create a new item",
        "description": "Creates a new item in the system.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateItemDto"
              },
              "example": {
                "seriaCode": 12345,
                "stockId": "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Item created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "4e4986dd-4007-456f-9d8e-5e0c0f21f6ba",
                    "seriaCode": 12345,
                    "status": "Available",
                    "stockId": "759b6410-ce20-4c17-9b96-246b41a62476",
                    "createdAt": "2025-07-08T15:59:46.2895909Z"
                  },
                  "message": "Item created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Stock not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleResponseItemStockNotFoundDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Item not found"
                }
              }
            }
          },
          "409": {
            "description": "Item already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Conflict: Item already exists"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Get all items",
        "description": "Retrieves a list of all items in the system.",
        "responses": {
          "200": {
            "description": "Items retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "59bf3c6e-6287-4797-9d3c-3b4d65f7d5ba",
                      "seriaCode": 12345,
                      "status": "Available",
                      "stockId": "3a65c22c-9528-43f0-9013-a31204fcc3ab",
                      "createdAt": "2025-07-08T15:59:46.292613Z"
                    }
                  ],
                  "message": "Items retrieved successfully"
                }
              }
            }
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Get an item by ID",
        "description": "Retrieves an item from the system by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "4c41bd57-4c52-446d-ba02-4b9dca206526",
                    "seriaCode": 12345,
                    "status": "Available",
                    "stockId": "3a49265b-d1a5-4cb6-9160-5686fc2d95f0",
                    "createdAt": "2025-07-08T15:59:46.2968644Z"
                  },
                  "message": "Item retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Item not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Items"
        ],
        "summary": "Update an existing item",
        "description": "Updates the details of an existing item in the system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateItemDto"
              },
              "example": {
                "seriaCode": 54321,
                "status": "UNAVAILABLE"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Item updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "279b96b2-9d72-45f8-b96d-ba3a7c609f11",
                    "seriaCode": 12345,
                    "status": "Available",
                    "stockId": "2ed3e88a-c3dc-47f8-bab8-aa6a2d64851b",
                    "createdAt": "2025-07-08T15:59:46.3061744Z"
                  },
                  "message": "Item updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Item not found"
                }
              }
            }
          },
          "409": {
            "description": "Item already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Conflict: Item already exists"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "summary": "Delete an item",
        "description": "Deletes an item from the system by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "Item deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Item not found"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/items/stock/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Get items by stock ID",
        "description": "Retrieves a list of items associated with a specific stock ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerItemListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "a4252578-03ec-41b0-9f44-772af9410241",
                      "seriaCode": 12345,
                      "status": "Available",
                      "stockId": "f16d7e6f-9459-4431-9db8-0919ef573b56",
                      "createdAt": "2025-07-08T15:59:46.3119228Z"
                    }
                  ],
                  "message": "Items retrieved successfully"
                }
              }
            }
          }
        }
      }
    },
    "/loans": {
      "post": {
        "tags": [
          "Loans"
        ],
        "summary": "Create a new loan",
        "description": "Creates a new loan in the system.",
        "operationId": "CreateLoan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateLoanDto"
              },
              "example": {
                "applicantId": "11111111-1111-1111-1111-111111111111",
                "responsibleId": "22222222-2222-2222-2222-222222222222",
                "itemId": "33333333-3333-3333-3333-333333333333",
                "reason": "Loaning item for temporary use"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Loan created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "173092fc-6b0e-4470-b329-e98ddc6a1772",
                    "returnDate": "2025-07-15T15:59:46.3237132Z",
                    "reason": "Loaning item for temporary use",
                    "isActive": true,
                    "item": {
                      "id": "e74d41e0-9104-4cac-a153-36534108dff0",
                      "seriaCode": 12345,
                      "status": "Available",
                      "stockId": "315c8361-34dc-42df-992c-39c8d3418eed",
                      "createdAt": "2025-07-08T15:59:46.3237188Z"
                    },
                    "applicant": {
                      "id": "b69a278d-9729-4348-bc6b-0c49e0214565",
                      "name": "John Doe",
                      "cpf": "12345678901",
                      "email": "john.doe@example.com",
                      "phoneNumber": "11999999999",
                      "address": "123 Main St",
                      "isBeneficiary": true,
                      "beneficiaryQtd": 1,
                      "createdAt": "2025-07-08T15:59:46.3237218Z",
                      "dependents": null
                    },
                    "responsible": {
                      "id": "4bfd3658-d98f-453f-986c-c9a8f9adb12d",
                      "name": "Jane Smith",
                      "email": "jane.smith@example.com",
                      "phoneNumber": "11888888888",
                      "orthopedicBank": null,
                      "createdAt": "2025-07-08T15:59:46.3237244Z"
                    },
                    "createdAt": "2025-07-08T15:59:46.3237258Z"
                  },
                  "message": "Loan created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An error occurred while processing your request"
                }
              }
            }
          },
          "404": {
            "description": "Item or Applicant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Item or Applicant not found"
                }
              }
            }
          },
          "409": {
            "description": "Item is not available for loan",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Item is not available for loan"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An error occurred while processing your request"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Loans"
        ],
        "summary": "Get all loans",
        "description": "Retrieves a list of all loans in the system.",
        "operationId": "GetLoans",
        "responses": {
          "200": {
            "description": "Loans retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "3116a6e1-2d8c-4e8c-b6e3-55b9bdc318e0",
                      "returnDate": "2025-07-15T15:59:46.3304539Z",
                      "reason": "Loaning item for temporary use",
                      "isActive": true,
                      "item": 12345,
                      "applicant": "John Doe",
                      "responsible": "Jane Smith",
                      "createdAt": "2025-07-08T15:59:46.3304584Z"
                    }
                  ],
                  "message": "Loans retrieved successfully"
                }
              }
            }
          }
        }
      }
    },
    "/loans/{id}": {
      "get": {
        "tags": [
          "Loans"
        ],
        "summary": "Get a loan by ID",
        "description": "Retrieves a loan from the system by its unique identifier.",
        "operationId": "GetLoan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "af54aeeb-9ad6-4dbb-91c0-dac9f59442bb",
                    "returnDate": "2025-07-15T15:59:46.3382244Z",
                    "reason": "Loaning item for temporary use",
                    "isActive": true,
                    "item": {
                      "id": "cfe51717-f889-4326-85f2-93dae3e618c4",
                      "seriaCode": 12345,
                      "status": "Available",
                      "stockId": "e47f787f-88c7-4fe1-b84f-606cd41409fa",
                      "createdAt": "2025-07-08T15:59:46.338231Z"
                    },
                    "applicant": {
                      "id": "d5ca8de5-07a3-4c86-91b6-e2b269691b5c",
                      "name": "John Doe",
                      "cpf": "12345678901",
                      "email": "john.doe@example.com",
                      "phoneNumber": "11999999999",
                      "address": "123 Main St",
                      "isBeneficiary": true,
                      "beneficiaryQtd": 1,
                      "createdAt": "2025-07-08T15:59:46.3382345Z",
                      "dependents": null
                    },
                    "responsible": {
                      "id": "da5990e1-aa59-4c57-9efc-19767f97e883",
                      "name": "Jane Smith",
                      "email": "jane.smith@example.com",
                      "phoneNumber": "11888888888",
                      "orthopedicBank": null,
                      "createdAt": "2025-07-08T15:59:46.3382368Z"
                    },
                    "createdAt": "2025-07-08T15:59:46.3382381Z"
                  },
                  "message": "Loan retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Loan not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Loan not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Loans"
        ],
        "summary": "Update an existing loan",
        "description": "Updates the details of an existing loan in the system.",
        "operationId": "UpdateLoan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateLoanDto"
              },
              "example": {
                "reason": "Updated loan reason",
                "isActive": true
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Loan updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "040d2191-9c25-411b-b163-eb893d7c7da4",
                    "returnDate": "2025-07-15T15:59:46.3446586Z",
                    "reason": "Loaning item for temporary use",
                    "isActive": true,
                    "item": {
                      "id": "b3104438-82c7-4a36-a26e-4f3f214d3c30",
                      "seriaCode": 12345,
                      "status": "Available",
                      "stockId": "539689ee-301e-49dc-8677-e37e9a2ec0d1",
                      "createdAt": "2025-07-08T15:59:46.3446649Z"
                    },
                    "applicant": {
                      "id": "d16040be-f868-4ba3-bd26-f0dd0da8780e",
                      "name": "John Doe",
                      "cpf": "12345678901",
                      "email": "john.doe@example.com",
                      "phoneNumber": "11999999999",
                      "address": "123 Main St",
                      "isBeneficiary": true,
                      "beneficiaryQtd": 1,
                      "createdAt": "2025-07-08T15:59:46.3446683Z",
                      "dependents": null
                    },
                    "responsible": {
                      "id": "82c20e1b-6017-4f7d-9d67-7b756b729f38",
                      "name": "Jane Smith",
                      "email": "jane.smith@example.com",
                      "phoneNumber": "11888888888",
                      "orthopedicBank": null,
                      "createdAt": "2025-07-08T15:59:46.3446708Z"
                    },
                    "createdAt": "2025-07-08T15:59:46.3446722Z"
                  },
                  "message": "Loan updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An error occurred while processing your request"
                }
              }
            }
          },
          "404": {
            "description": "Loan not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Loan not found"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An error occurred while processing your request"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Loans"
        ],
        "summary": "Delete a loan",
        "description": "Deletes a loan from the system by its unique identifier.",
        "operationId": "DeleteLoan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Loan deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "Loan deleted successfully"
                }
              }
            }
          },
          "404": {
            "description": "Loan not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Loan not found"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerLoanDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An error occurred while processing your request"
                }
              }
            }
          }
        }
      }
    },
    "/orthopedic-banks": {
      "post": {
        "tags": [
          "Orthopedic Banks"
        ],
        "summary": "Create a new orthopedic bank",
        "description": "Creates a new orthopedic bank in the system.",
        "operationId": "CreateOrthopedicBank",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateOrthopedicBankDto"
              },
              "example": {
                "name": "Rotary Orthopedic Center",
                "city": "Cuiabá - MT"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Orthopedic bank created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "4cf2f00f-e298-436e-9194-85e509733fc9",
                    "name": "Central Orthopedic Bank",
                    "city": "São Paulo",
                    "stocks": null,
                    "createdAt": "2025-07-08T15:59:46.3678838Z"
                  },
                  "message": "Orthopedic bank created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Invalid request data"
                }
              }
            }
          },
          "409": {
            "description": "Orthopedic bank already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An orthopedic bank with this name already exists"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Orthopedic Banks"
        ],
        "summary": "Get all orthopedic banks",
        "description": "Retrieves a list of all orthopedic banks in the system.",
        "operationId": "GetOrthopedicBanks",
        "responses": {
          "200": {
            "description": "Orthopedic banks retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "95dea80f-c0c0-4a4c-b8ba-92d268c5b551",
                      "name": "Central Orthopedic Bank",
                      "city": "São Paulo",
                      "stocks": null,
                      "createdAt": "2025-07-08T15:59:46.3700106Z"
                    }
                  ],
                  "message": "Orthopedic banks retrieved successfully"
                }
              }
            }
          }
        }
      }
    },
    "/orthopedic-banks/{id}": {
      "get": {
        "tags": [
          "Orthopedic Banks"
        ],
        "summary": "Get an orthopedic bank by ID",
        "description": "Retrieves an orthopedic bank from the system by its unique identifier.",
        "operationId": "GetOrthopedicBank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orthopedic bank retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "c3df48f6-c68e-4a3e-b9b3-f00ddd7f6d6a",
                    "name": "Central Orthopedic Bank",
                    "city": "São Paulo",
                    "stocks": [
                      {
                        "id": "54554b52-3032-4e31-b62b-aaa0ae2ee854",
                        "title": "Existing Stock Title",
                        "imageUrl": "https://example.com/image.jpg",
                        "maintenanceQtd": 5,
                        "availableQtd": 10,
                        "borrowedQtd": 2,
                        "totalQtd": 17,
                        "orthopedicBankId": "c8800fc0-9ddb-434b-afda-479ea6f9a38a",
                        "orthopedicBank": null,
                        "items": null,
                        "createdAt": "2025-07-08T15:59:46.3740256Z"
                      }
                    ],
                    "createdAt": "2025-07-08T15:59:46.3740274Z"
                  },
                  "message": "Orthopedic bank retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Orthopedic bank not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Orthopedic bank not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Orthopedic Banks"
        ],
        "summary": "Update an orthopedic bank",
        "description": "Updates an existing orthopedic bank in the system.",
        "operationId": "UpdateOrthopedicBank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateOrthopedicBankDto"
              },
              "example": {
                "name": "Updated Orthopedic Center",
                "city": "Barra do Garças - MT"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Orthopedic bank updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "6de44306-149f-4e36-9cb2-9a7916c8fa8f",
                    "name": "Central Orthopedic Bank",
                    "city": "São Paulo",
                    "stocks": null,
                    "createdAt": "2025-07-08T15:59:46.3836728Z"
                  },
                  "message": "Orthopedic bank updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Orthopedic bank not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Orthopedic bank not found"
                }
              }
            }
          },
          "409": {
            "description": "Orthopedic bank already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An orthopedic bank with this name already exists"
                }
              }
            }
          },
          "500": {
            "description": "An error occurred while processing the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orthopedic Banks"
        ],
        "summary": "Delete an orthopedic bank",
        "description": "Deletes an existing orthopedic bank from the system.",
        "operationId": "DeleteOrthopedicBank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orthopedic bank deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "Orthopedic bank deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Orthopedic bank cannot be deleted because it has associated stock/items.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Orthopedic bank not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerOrthopedicBankDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Orthopedic bank not found"
                }
              }
            }
          }
        }
      }
    },
    "/stocks": {
      "post": {
        "tags": [
          "Stocks"
        ],
        "summary": "Create a new stock",
        "description": "Creates a new stock in the system. This endpoint accepts form-data with the following fields: Title (required), OrthopedicBankId (required), and ImageFile (optional).",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateStockFormDto"
              },
              "example": {
                "title": "Cadeira de Rodas Dobrável",
                "imageFile": null,
                "orthopedicBankId": "12345678-1234-1234-1234-123456789012"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateStockFormDto"
              },
              "example": {
                "title": "Cadeira de Rodas Dobrável",
                "imageFile": null,
                "orthopedicBankId": "12345678-1234-1234-1234-123456789012"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Stock created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "0135ae26-ba6c-4ba7-9d8a-50880f5b7010",
                    "title": "Existing Stock Title",
                    "imageUrl": "https://example.com/image.jpg",
                    "maintenanceQtd": 5,
                    "availableQtd": 10,
                    "borrowedQtd": 2,
                    "totalQtd": 17,
                    "orthopedicBankId": "5a3b286c-2f84-424e-b4c9-3b57211a4328",
                    "orthopedicBank": null,
                    "items": null,
                    "createdAt": "2025-07-08T15:59:46.3990472Z"
                  },
                  "message": "Stock created successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Orthopedic bank with ID not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Orthopedic Bank with is Id not found"
                }
              }
            }
          },
          "409": {
            "description": "Stock already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": {
                    "id": "c4b1ed5e-a42a-4717-b0d3-abab77de5fa3",
                    "title": "Existing Stock Title",
                    "imageUrl": "https://example.com/image.jpg",
                    "maintenanceQtd": 5,
                    "availableQtd": 10,
                    "borrowedQtd": 2,
                    "totalQtd": 17,
                    "orthopedicBankId": "ca18e210-1b48-4ee5-b9b3-215aa2a9f940",
                    "orthopedicBank": null,
                    "items": null,
                    "createdAt": "2025-07-08T15:59:46.4011719Z"
                  },
                  "message": "Stock with name already exists"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Get all stocks",
        "description": "Retrieves all stocks from the system.",
        "responses": {
          "200": {
            "description": "Stocks retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "0ae2239b-3138-47ab-9c86-30884929df88",
                      "title": "Existing Stock Title",
                      "imageUrl": "https://example.com/image.jpg",
                      "maintenanceQtd": 5,
                      "availableQtd": 10,
                      "borrowedQtd": 2,
                      "totalQtd": 17,
                      "orthopedicBankId": "89a9c087-80bb-4655-a744-485281e33c42",
                      "orthopedicBank": null,
                      "items": null,
                      "createdAt": "2025-07-08T15:59:46.4043612Z"
                    }
                  ],
                  "message": "Stocks retrieved successfully"
                }
              }
            }
          }
        }
      }
    },
    "/stocks/{id}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Get a stock by ID",
        "description": "Retrieves a stock from the system by its unique identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": true,
                  "data": {
                    "id": "7fa912fe-ed31-41a8-babf-9316a22b5a6e",
                    "title": "Existing Stock Title",
                    "imageUrl": "https://example.com/image.jpg",
                    "maintenanceQtd": 5,
                    "availableQtd": 10,
                    "borrowedQtd": 2,
                    "totalQtd": 17,
                    "orthopedicBankId": "1f662f83-033e-4fef-bced-ce98654d43a2",
                    "orthopedicBank": {
                      "id": "56dd4084-f171-415f-b466-2bf9eafc8c8d",
                      "name": "Orthopedic Bank Name",
                      "city": "Barra do Garças - MT",
                      "stocks": null,
                      "createdAt": "2025-07-08T15:59:46.4095Z"
                    },
                    "items": [
                      {
                        "id": "6ef432d8-b446-48d3-ba51-09a814cfb2bd",
                        "seriaCode": 23344556,
                        "status": "AVAILABLE",
                        "stockId": "ac61679f-4e05-4922-adbd-aab7e033ffa5",
                        "createdAt": "2025-07-08T15:59:46.4095405Z"
                      },
                      {
                        "id": "4933534b-c167-43e0-aafd-854842e0bb9a",
                        "seriaCode": 23344557,
                        "status": "MAINTENANCE",
                        "stockId": "c1476b2b-dcb7-41c4-ab6e-a47b9410021a",
                        "createdAt": "2025-07-08T15:59:46.4095449Z"
                      }
                    ],
                    "createdAt": "2025-07-08T15:59:46.4095452Z"
                  },
                  "message": "Stock retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Stock not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Stock not found"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Stocks"
        ],
        "summary": "Update a stock",
        "description": "Updates an existing stock in the system. This endpoint accepts form-data with the following optional fields: Title, ImageFile, MaintenanceQtd, AvailableQtd, and BorrowedQtd.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateStockFormDto"
              },
              "example": {
                "title": "Cadeira de Rodas Dobrável - Atualizada",
                "imageFile": null,
                "maintenanceQtd": 2,
                "availableQtd": 8,
                "borrowedQtd": 5
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RequestUpdateStockFormDto"
              },
              "example": {
                "title": "Cadeira de Rodas Dobrável - Atualizada",
                "imageFile": null,
                "maintenanceQtd": 2,
                "availableQtd": 8,
                "borrowedQtd": 5
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "Stock updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Stock not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Stock not found"
                }
              }
            }
          },
          "409": {
            "description": "Stock already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": {
                    "id": "78cde2b5-6874-4115-a905-e21c8adc931b",
                    "title": "Existing Stock Title",
                    "imageUrl": "https://example.com/image.jpg",
                    "maintenanceQtd": 5,
                    "availableQtd": 10,
                    "borrowedQtd": 2,
                    "totalQtd": 17,
                    "orthopedicBankId": "f6a17f2f-a541-48f3-95ee-bc794e42e566",
                    "orthopedicBank": null,
                    "items": null,
                    "createdAt": "2025-07-08T15:59:46.4197174Z"
                  },
                  "message": "Stock with name already exists"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Stocks"
        ],
        "summary": "Delete a stock",
        "description": "Deletes an existing stock from the system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": true,
                  "data": null,
                  "message": "Stock deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Invalid request data"
                }
              }
            }
          },
          "404": {
            "description": "Stock not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "Stock not found"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockDTO"
                },
                "example": {
                  "success": false,
                  "data": null,
                  "message": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/stocks/orthopedic-bank/{orthopedicBankId}": {
      "get": {
        "tags": [
          "Stocks"
        ],
        "summary": "Get stocks by orthopedic bank",
        "description": "Retrieves all stocks for a specific orthopedic bank.",
        "parameters": [
          {
            "name": "orthopedicBankId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stocks retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "fe8957da-3022-4437-8b92-159f226fb708",
                      "title": "Existing Stock Title",
                      "imageUrl": "https://example.com/image.jpg",
                      "maintenanceQtd": 5,
                      "availableQtd": 10,
                      "borrowedQtd": 2,
                      "totalQtd": 17,
                      "orthopedicBankId": "a4681b2a-fcbc-4d8e-9efd-d169a0150ac7",
                      "orthopedicBank": null,
                      "items": null,
                      "createdAt": "2025-07-08T15:59:46.4267368Z"
                    }
                  ],
                  "message": "Stocks retrieved successfully"
                }
              }
            }
          },
          "404": {
            "description": "Orthopedic bank not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseControllerStockListDTO"
                },
                "example": {
                  "success": true,
                  "count": 1,
                  "data": [
                    {
                      "id": "a0c7ce72-c2f3-42dd-9b19-dab0bbdd085e",
                      "title": "Existing Stock Title",
                      "imageUrl": "https://example.com/image.jpg",
                      "maintenanceQtd": 5,
                      "availableQtd": 10,
                      "borrowedQtd": 2,
                      "totalQtd": 17,
                      "orthopedicBankId": "fff68359-56fe-412d-b3fe-1a918240564c",
                      "orthopedicBank": null,
                      "items": null,
                      "createdAt": "2025-07-08T15:59:46.4268396Z"
                    }
                  ],
                  "message": "Stocks retrieved successfully"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenResponse": {
        "required": [
          "accessToken",
          "expiresIn",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "tokenType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExampleResponseItemStockNotFoundDTO": {
        "type": "object",
        "additionalProperties": false
      },
      "ItemStatus": {
        "enum": [
          "MAINTENANCE (The item is under maintenance and cannot be used.)",
          "AVAILABLE (The item is available for use.)",
          "UNAVAILABLE (The item is currently unavailable for use.)",
          "LOST (The item has been lost and cannot be recovered.)",
          "DONATED (The item has been donated and is no longer part of the inventory.)"
        ],
        "type": "string"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "RequestCreateApplicantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "isBeneficiary": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RequestCreateDependentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "applicantId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RequestCreateItemDto": {
        "type": "object",
        "properties": {
          "seriaCode": {
            "type": "integer",
            "format": "int32"
          },
          "stockId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RequestCreateLoanDto": {
        "type": "object",
        "properties": {
          "applicantId": {
            "type": "string",
            "format": "uuid"
          },
          "responsibleId": {
            "type": "string",
            "format": "uuid"
          },
          "itemId": {
            "type": "string",
            "format": "uuid"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestCreateOrthopedicBankDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestCreateStockFormDto": {
        "required": [
          "orthopedicBankId",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "imageFile": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "orthopedicBankId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RequestCreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "orthopedicBankId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "RequestLoginUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateApplicantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "isBeneficiary": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateDependentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateItemDto": {
        "type": "object",
        "properties": {
          "seriaCode": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ItemStatus"
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateLoanDto": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateOrthopedicBankDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateStockFormDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "imageFile": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "maintenanceQtd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availableQtd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "borrowedQtd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestUpdateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerApplicantsDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "data": {
            "$ref": "#/components/schemas/ResponseEntityApplicantsDTO"
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerApplicantsListDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "count": {
            "type": "integer",
            "description": "Count of applicants returned in the response",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityApplicantsDTO"
            },
            "description": "List of applicant data",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerDependentDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "data": {
            "$ref": "#/components/schemas/ResponseEntityDependentDTO"
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerDependentListDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "count": {
            "type": "integer",
            "description": "Count of dependents returned",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityDependentDTO"
            },
            "description": "List of dependent data if the operation was successful",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerItemDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "data": {
            "$ref": "#/components/schemas/ResponseEntityItemDTO"
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerItemListDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "count": {
            "type": "integer",
            "description": "Count of items returned",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityItemDTO"
            },
            "description": "List of item data if the operation was successful",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerLoanDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "data": {
            "$ref": "#/components/schemas/ResponseEntityLoanDTO"
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerLoanListDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "count": {
            "type": "integer",
            "description": "Count of loans returned",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityLoanListDTO"
            },
            "description": "List of loan data if the operation was successful",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerOrthopedicBankDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "data": {
            "$ref": "#/components/schemas/ResponseEntityOrthopedicBankDTO"
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerOrthopedicBankListDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "count": {
            "type": "integer",
            "description": "Count of orthopedic banks returned",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityOrthopedicBankDTO"
            },
            "description": "List of orthopedic bank data if the operation was successful",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerStockDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "data": {
            "$ref": "#/components/schemas/ResponseEntityStockDTO"
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerStockListDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "count": {
            "type": "integer",
            "description": "Count of stocks returned",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityStockDTO"
            },
            "description": "List of stock data if the operation was successful",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerUserDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "data": {
            "$ref": "#/components/schemas/ResponseEntityUserDTO"
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseControllerUserListDTO": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the operation was successful"
          },
          "count": {
            "type": "integer",
            "description": "Count of users returned in the response",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityUserDTO"
            },
            "description": "List of user data if the operation was successful",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Message providing additional information about the operation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseEntityApplicantsDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the applicant",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the applicant",
            "format": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "description": "CPF of the applicant",
            "format": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of the applicant",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the applicant",
            "format": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address of the applicant",
            "format": "string",
            "nullable": true
          },
          "isBeneficiary": {
            "type": "boolean",
            "description": "Indicator if the applicant is a beneficiary",
            "format": "boolean"
          },
          "beneficiaryQtd": {
            "type": "integer",
            "description": "Quantity of beneficiaries",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the applicant",
            "format": "date-time"
          },
          "dependents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityDependentDTO"
            },
            "description": "Array of dependents associated with the applicant",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseEntityDependentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the dependent",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the dependent",
            "format": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "description": "CPF of the dependent",
            "format": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of the dependent",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the dependent",
            "format": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "description": "Address of the dependent",
            "format": "string",
            "nullable": true
          },
          "applicantId": {
            "type": "string",
            "description": "Identifier of the associated applicant",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the dependent",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ResponseEntityItemDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the item",
            "format": "uuid"
          },
          "seriaCode": {
            "type": "integer",
            "description": "Serial code of the item",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Status of the item",
            "format": "string",
            "nullable": true
          },
          "stockId": {
            "type": "string",
            "description": "Unique identifier of the stock associated with the item",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the item",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ResponseEntityLoanDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the loan",
            "format": "uuid"
          },
          "returnDate": {
            "type": "string",
            "description": "Return date of the loan",
            "format": "date-time",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason for the loan",
            "format": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates whether the loan is active",
            "format": "boolean"
          },
          "item": {
            "$ref": "#/components/schemas/ResponseEntityItemDTO"
          },
          "applicant": {
            "$ref": "#/components/schemas/ResponseEntityApplicantsDTO"
          },
          "responsible": {
            "$ref": "#/components/schemas/ResponseEntityUserDTO"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the loan",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ResponseEntityLoanListDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the loan",
            "format": "uuid"
          },
          "returnDate": {
            "type": "string",
            "description": "Return date of the loan",
            "format": "date-time",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason for the loan",
            "format": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "Indicates whether the loan is active",
            "format": "boolean"
          },
          "item": {
            "type": "integer",
            "description": "Identifier of the item being loaned",
            "format": "int32",
            "nullable": true
          },
          "applicant": {
            "type": "string",
            "description": "Name of the applicant",
            "format": "string",
            "nullable": true
          },
          "responsible": {
            "type": "string",
            "description": "Name of the responsible user",
            "format": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the loan",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ResponseEntityOrthopedicBankDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the orthopedic bank",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the orthopedic bank",
            "format": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City of the orthopedic bank",
            "format": "string",
            "nullable": true
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityStockDTO"
            },
            "description": "List of orthopedic bank stocks",
            "format": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the orthopedic bank",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ResponseEntityStockDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the stock",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "description": "Title of the stock",
            "format": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "description": "Image URL of the stock",
            "format": "string",
            "nullable": true
          },
          "maintenanceQtd": {
            "type": "integer",
            "description": "Quantity for maintenance",
            "format": "int32"
          },
          "availableQtd": {
            "type": "integer",
            "description": "Quantity available",
            "format": "int32"
          },
          "borrowedQtd": {
            "type": "integer",
            "description": "Quantity borrowed",
            "format": "int32"
          },
          "totalQtd": {
            "type": "integer",
            "description": "Total quantity",
            "format": "int32"
          },
          "orthopedicBankId": {
            "type": "string",
            "description": "Unique identifier of the orthopedic bank",
            "format": "uuid",
            "nullable": true
          },
          "orthopedicBank": {
            "$ref": "#/components/schemas/ResponseEntityOrthopedicBankDTO"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseEntityItemDTO"
            },
            "description": "Items associated with the stock",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the stock",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ResponseEntityUserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the user",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the user",
            "format": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of the user",
            "format": "email",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user",
            "format": "string",
            "nullable": true
          },
          "orthopedicBank": {
            "$ref": "#/components/schemas/ResponseEntityOrthopedicBankDTO"
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of the user",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "API Key needed to access the endpoints. ApiKey: X-Api-Key",
        "name": "x-api-key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKey": []
    }
  ]
}